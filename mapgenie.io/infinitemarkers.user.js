// ==UserScript==
// @name         MapGenie - Infinite Markers [WIP]
// @namespace    https://github.com/DakuTree/userscripts
// @author       Daku (admin@codeanimu.net)
// @description  Adds infinite markers to MapGenie
// @homepageURL  https://github.com/DakuTree/userscripts
// @supportURL   https://github.com/DakuTree/userscripts/issues
// @match        https://mapgenie.io/*/*
// @version      1.0.0
// @require      http://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js
// @grant        unsafeWindow
// ==/UserScript==
/* jshint -W097, browser:true, devel:true */
/* global $:false, jQuery:false */
'use strict';


const defaultFilter = [
	"in",
	["get", "category_id"],
	["literal", [5983, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5997, 5998, 5999, 6000, 6001, 6002, 6004, 6005, 6006, 6008, 6010, 6011, 6012, 6013, 6014]]
];
const locationURL = 'https://mapgenie.io/api/v1/user/locations/'

const idToHide = [176411, 176414, 177473, 177475, 177478, 177479, 177483, 177485, 177486, 177488, 177489, 177490, 177491, 177492, 177493, 177494, 177495, 177496, 177497, 177498, 177499, 177500, 177501, 177502, 177504, 177505, 177506, 177508, 177510, 177523, 177525, 177526, 177527, 177528, 177531, 177532, 177533, 177534, 177536, 177537, 177538, 177541, 177542, 177543, 177544, 177545, 177546, 177561, 177574, 177578, 177579, 177581, 177588, 177590, 177591, 177592, 177594, 177595, 177597, 177600, 177601, 177603, 177604, 177605, 177674, 177675, 177689, 177690, 177691, 177693, 177711, 177713, 177714, 177715, 177719, 177722, 177724, 177725, 177726, 177727, 177728, 177729, 177730, 177733, 177734, 177736, 177737, 177750, 177767, 177774, 177781, 177783, 177785, 177786, 177787, 177788, 177789, 177790, 177791, 177792, 177793, 177794, 177795, 177796, 177797, 177798, 177799, 177801, 177802, 177804, 177805, 177806, 177807, 177808, 177809, 177810, 177811, 177812, 177813, 177814, 177816, 177817, 177818, 177819, 177820, 177821, 177822, 177824, 178009, 178010, 178011, 178012, 178013, 178014, 178015, 178016, 178017, 178018, 178019, 178020, 178021, 178034, 178038, 178039, 178040, 178041, 178042, 178043, 178044, 178045, 178046, 178049, 178050, 178051, 178057, 178059, 178061, 178064, 178065, 178072, 178077, 178083, 178084, 178120, 178129, 178163, 178167, 178171, 177476, 177477, 177503, 177511, 177512, 177515, 177520, 177522, 177535, 177547, 177548, 177550, 177551, 177552, 177553, 177554, 177555, 177556, 177557, 177558, 177564, 177565, 177566, 177567, 177568, 177569, 177570, 177571, 177572, 177573, 177587, 177602, 177673, 177677, 177678, 177679, 177680, 177681, 177682, 177683, 177684, 177685, 177686, 177687, 177688, 177694, 177695, 177696, 177697, 177702, 177703, 177704, 177705, 177706, 177707, 177708, 177709, 177710, 177776, 177779, 177825, 177826, 177827, 177828, 177829, 177830, 177831, 177832, 177833, 177834, 177835, 177840, 178047, 178066, 178070, 178121, 178122, 178124, 178172, 180730, 193449];

$(document).ready(function () {
	let map = unsafeWindow.map;
	map.once('idle', function (x) {
		console.log('loaded');
		map.off('idle');

		map.setZoom(0);


		setTimeout(function () {
			let matchedFeatures = map.queryRenderedFeatures({ layers: ["locations"] }).filter(feature => idToHide.includes(feature.id));
			let customFilters = matchedFeatures.map(feature => ['!=', 'locationId', feature.id]);

			map.setFilter('locations', ['all', /*defaultFilter,*/ ...customFilters]);
		}, 3 * 1000);

	});
});
